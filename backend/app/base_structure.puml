@startuml DatabaseSchema

' Enable stereotypes to show table names
skinparam class {
    BackgroundColor White
    ArrowColor #444444
    BorderColor #444444
}

' Enums
enum UserRole {
    CLIENT
    MANAGER
    MENTOR
    DISTRIBUTOR
    ADMIN
}

enum UserStatus {
    INACTIVE
    ACTIVE
    PENDING
    BLOCKED
}

enum ProductCategory {
    COSMETICS
    NUTRITION
    COURSE
    WEBINAR
    COLLECTION
}

enum InteractionType {
    PURCHASE
    CART_ADD
    FAVORITE
    WEBINAR_REGISTER
    WEBINAR_ATTEND
    ACHIEVEMENT_UNLOCK
}

enum TransactionType {
    PURCHASE
    BONUS
    PENALTY
    ACHIEVEMENT
    REFERRAL
    CASH_OUT
    CASH_IN
}

enum TransactionStatus {
    PENDING
    FAILED
    COMPLETED
}

' Tables
class TimeZone {
    + id: int (PK)
    + name: str
    + offset: str
}

class User {
    + id: UUID (PK)
    + email: str
    + phone: str
    + username: str
    + full_name: str
    + postcode: str
    + address: str
    + role: UserRole
    + status: UserStatus
    + cash_balance: Decimal
    + pv_balance: Decimal
    + timezone_id: int (FK)
    + mentor_id: UUID (FK)
    + registration_date: datetime
    + hashed_password: str
}

class Product {
    + id: UUID (PK)
    + title: str
    + description: str
    + category: ProductCategory
    + price: Decimal
    + pv_value: Decimal
    + image_url: str
    + webinar_link: str
    + is_active: bool
    + is_collection: bool
    + collection_items: JSON
    + created_at: datetime
}

class CartItem {
    + id: UUID (PK)
    + user_id: UUID (FK)
    + product_id: UUID (FK)
    + quantity: int
    + added_at: datetime
}

class UserProductInteraction {
    + id: UUID (PK)
    + user_id: UUID (FK)
    + product_id: UUID (FK)
    + interaction_type: InteractionType
    + pv_awarded: Decimal
    + interaction_date: datetime
    + achievement_id: UUID (FK)
    + additional_info: JSON
}

class Transaction {
    + id: UUID (PK)
    + user_id: UUID (FK)
    + cash_amount: Decimal
    + pv_amount: Decimal
    + type: TransactionType
    + status: TransactionStatus
    + product_id: UUID (FK)
    + achievement_id: UUID (FK)
    + created_at: datetime
    + additional_info: JSON
}

class Achievement {
    + id: UUID (PK)
    + name: str
    + description: str
    + pv_reward: Decimal
    + image_url: str
}

class UserAchievement {
    + id: UUID (PK)
    + user_id: UUID (FK)
    + achievement_id: UUID (FK)
    + unlocked_at: datetime
}

' Relationships
User "1" *-- "0..*" User : mentor_id <|-- mentees
User "1" *-- "1" TimeZone : timezone_id
User "1" *-- "0..*" CartItem : cart_items
User "1" *-- "0..*" UserProductInteraction : interactions
User "1" *-- "0..*" Transaction : transactions
User "1" *-- "0..*" UserAchievement : achievements

Product "1" *-- "0..*" UserProductInteraction : interactions
Product "1" *-- "0..*" CartItem : cart_items
Product "1" *-- "0..*" Transaction : transactions

Achievement "1" *-- "0..*" UserAchievement : user_achievements
Achievement "1" *-- "0..*" UserProductInteraction : interactions
Achievement "1" *-- "0..*" Transaction : transactions

' Notes
note top of User
    Table: users
    Indexes:
    - email (unique)
    - username
    - mentor_id
    - timezone_id
end note

note top of Product
    Table: products
    Indexes:
    - category
    - is_active
    - is_collection
end note

note top of UserProductInteraction
    Table: user_product_interactions
    Indexes:
    - user_id
    - product_id
    - interaction_type
    - interaction_date
end note

note top of Transaction
    Table: transactions
    Indexes:
    - user_id
    - type
    - status
    - created_at
end note

@enduml