@startuml ecommerce_models

' Настройки диаграммы
hide circle
skinparam linetype ortho
skinparam packageStyle rectangle
skinparam class {
    BackgroundColor White
    ArrowColor #0078D7
    BorderColor #0078D7
}

' Определение классов

class TimeZone {
    + id: int (PK)
    + name: str
    + offset: str
}

class UserBase {
    <<Abstract>>
    + email: str
    + phone: str
    + username: str
    + full_name: str
    + postcode: str
    + address: str
    + role: str
    + status: str
    + timezone_id: Optional[int] (FK)
    + mentor_id: Optional[uuid.UUID] (FK)
    + balance: float
    + registration_date: datetime
}

class User {
    + id: uuid.UUID (PK)
    + hashed_password: str
}

class Product {
    + id: uuid.UUID (PK)
    + title: str
    + description: str
    + category: str
    + price: float
    + points_value: float
    + image_url: str
    + webinar_link: str
    + is_active: bool
    + is_collection: bool
    + collection_items: Optional[List[Dict]]
    + created_at: datetime
}

class CartItem {
    + id: uuid.UUID (PK)
    + user_id: uuid.UUID (FK)
    + product_id: uuid.UUID (FK)
    + quantity: int
    + added_at: datetime
}

class UserProductInteraction {
    + id: uuid.UUID (PK)
    + user_id: uuid.UUID (FK)
    + product_id: Optional[uuid.UUID] (FK)
    + interaction_type: str
    + points_awarded: float
    + interaction_date: datetime
    + achievement_id: Optional[uuid.UUID] (FK)
    + additional_info: Optional[Dict]
}

class Transaction {
    + id: uuid.UUID (PK)
    + user_id: uuid.UUID (FK)
    + amount: float
    + points: float
    + type: str
    + status: str
    + product_id: Optional[uuid.UUID] (FK)
    + achievement_id: Optional[uuid.UUID] (FK)
    + created_at: datetime
    + additional_info: Dict
}

class Achievement {
    + id: uuid.UUID (PK)
    + name: str
    + description: str
    + points: float
    + image_url: str
}

class UserAchievement {
    + id: uuid.UUID (PK)
    + user_id: uuid.UUID (FK)
    + achievement_id: uuid.UUID (FK)
    + achieved_at: datetime
}

' Наследование
UserBase <|-- User

' Связи между классами

User "1" *-- "0..*" CartItem : "has"
Product "1" *-- "0..*" CartItem : "in"

User "1" *-- "0..*" Transaction : "has"
Product "0..1" *-- "0..*" Transaction : "in"
Achievement "0..1" *-- "0..*" Transaction : "triggers"

User "1" *-- "0..*" UserProductInteraction : "has"
Product "0..1" *-- "0..*" UserProductInteraction : "interacted with"
Achievement "0..1" *-- "0..*" UserProductInteraction : "awards"

User "0..1" *-- "0..*" User : "mentors"
TimeZone "0..1" *-- "0..*" User : "has"

User "1" *-- "0..*" UserAchievement : "has"
Achievement "1" *-- "0..*" UserAchievement : "awarded in"

' Примечания
note top of User
  Может быть ментором для других пользователей
  (self-referential relationship)
end note

note right of Product
  Может быть коллекцией товаров
  (collection_items содержит список товаров)
end note

note left of Transaction
  Может быть связана с:
  - Покупкой товара
  - Начислением баллов
  - Достижением
end note

@enduml