"""initialize models

Revision ID: 0a2a83c18740
Revises:
Create Date: 2025-04-03 08:54:02.217264

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '0a2a83c18740'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('tier', sa.Enum('BRONZE', 'SILVER', 'GOLD', 'PLATINUM', name='achievement_tier'), nullable=False),
    sa.Column('points_required', sa.Float(), nullable=False),
    sa.Column('image_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('is_secret', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('products',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=False),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('price', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('pv_value', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('image_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('webinar_link', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_collection', sa.Boolean(), nullable=False),
    sa.Column('collection_items', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('time_zones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('offset', sqlmodel.sql.sqltypes.AutoString(length=6), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('postcode', sqlmodel.sql.sqltypes.AutoString(length=12), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('cash_balance', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('pv_balance', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('timezone_id', sa.Integer(), nullable=True),
    sa.Column('mentor_id', sa.Uuid(), nullable=True),
    sa.Column('registration_date', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(length=128), nullable=False),
    sa.ForeignKeyConstraint(['mentor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['timezone_id'], ['time_zones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('cart_items',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('product_id', sa.Uuid(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('cash_amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('pv_amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('product_id', sa.Uuid(), nullable=True),
    sa.Column('achievement_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('additional_info', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_achievements',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('achievement_id', sa.Uuid(), nullable=False),
    sa.Column('unlocked_at', sa.DateTime(), nullable=False),
    sa.Column('progress', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_product_interactions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('product_id', sa.Uuid(), nullable=True),
    sa.Column('interaction_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pv_awarded', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('interaction_date', sa.DateTime(), nullable=False),
    sa.Column('achievement_id', sa.Uuid(), nullable=True),
    sa.Column('additional_info', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_product_interactions')
    op.drop_table('user_achievements')
    op.drop_table('transactions')
    op.drop_table('cart_items')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('time_zones')
    op.drop_table('products')
    op.drop_table('achievements')
    # ### end Alembic commands ###
