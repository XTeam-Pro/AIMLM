@startuml ECommerceModels

' Enable stereotypes to show SQLModel classes
skinparam class {
    BackgroundColor<<SQLModel>> #F8F8F8
    BorderColor<<SQLModel>> #444444
    ArrowColor #444444
}

' Define classes with their fields and relationships
class User {
    <<SQLModel>>
    + id: UUID [PK]
    + email: EmailStr
    + is_active: bool
    + is_superuser: bool
    + full_name: str?
    + hashed_password: str
}

class Product {
    <<SQLModel>>
    + id: UUID [PK]
    + title: str
    + description: str?
    + category: str
    + price: float
    + rating: float
    + popularity: float
}

class Item {
    <<SQLModel>>
    + id: UUID [PK]
    + interaction_type: str
    + quantity: int
    + interaction_date: datetime
    + category: str?
    + user_id: UUID [FK]
    + product_id: UUID [FK]
}

' Public models (DTOs)
class UserPublic {
    <<DTO>>
    + id: UUID
    + email: EmailStr
    + is_active: bool
    + is_superuser: bool
    + full_name: str?
}

class ProductPublic {
    <<DTO>>
    + id: UUID
    + title: str
    + description: str?
    + category: str
    + price: float
    + rating: float
    + popularity: float
}

class ItemPublic {
    <<DTO>>
    + id: UUID
    + interaction_type: str
    + quantity: int
    + interaction_date: datetime
    + category: str?
    + user_id: UUID
    + product_id: UUID
    + product: ProductPublic
}

' Relationships
User "1" -- "0..*" Item : "items"
Product "1" -- "0..*" Item : "items"

' Inheritance relationships
UserPublic --|> UserBase
ProductPublic --|> ProductBase
ItemPublic --|> ItemBase

' DTO relationships
ItemPublic "1" *-- "1" ProductPublic : contains

' Create/Update models
class UserCreate {
    <<DTO>>
    __inherits_from_UserBase__
    + password: str
}

class ProductCreate {
    <<DTO>>
    __inherits_from_ProductBase__
}

class ItemCreate {
    <<DTO>>
    __inherits_from_ItemBase__
    + product_id: UUID
}

' Notes
note top of User: "Authentication and user management"
note top of Product: "Product catalog with popularity tracking"
note top of Item: "Tracks user-product interactions\n(PURCHASE, CART, etc.)"

@enduml